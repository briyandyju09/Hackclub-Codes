const player = "p";
const wall = "w";
const enemy = "e";
const key = "k";
const door = "d";
const exit = "x";

// Define the sprites
setLegend(
  [player, bitmap`
................
................
.......66.......
.....666666.....
....66666666....
....66666666....
...6666666666...
...6666666666...
...6666666666...
....66666666....
....66666666....
.....666666.....
......6666......
.......66.......
................
................`],
  [wall, bitmap`
CCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCC`],
  [enemy, bitmap`
................
................
.....FF..FF.....
....FFFFFF......
...FFFFFFFF.....
...FFFFFFFF.....
...FFFFFFFF.....
....FFFFFF......
.....FF..FF.....
.....FF..FF.....
................
................
................
................
................
................`],
  [key, bitmap`
................
................
.......55.......
......5555......
.....555555.....
.....555555.....
......5555......
......5555......
......5555......
......5555......
......5555......
......5555......
......5555......
................
................
................`],
  [door, bitmap`
................
................
....CCCCCCCC....
...CCCCCCCCCC...
..CCCCCCCCCCCC..
..CCCCCCCCCCCC..
..CCCCCCCCCCCC..
..CCCCCCCCCCCC..
..CCCCCCCCCCCC..
..CCCCCCCCCCCC..
..CCCCCCCCCCCC..
..CCCCCCCCCCCC..
...CCCCCCCCCC...
....CCCCCCCC....
................
................`],
  [exit, bitmap`
................
................
.......44.......
.....444444.....
....44444444....
...4444444444...
...4444444444...
...4444444444...
...4444444444...
....44444444....
.....444444.....
.......44.......
................
................
................
................`]
);

// Set the level map
const level = map`
wwwwwwwwwwwwwwwwww
w.....e........x.w
w..wwwww...w.....w
w..w...w...w..k..w
w..w.w.w...w.....w
w..w.w.w.........w
w..w.w.w...wwww..w
w..w.w.w.........w
w..w.w.w...d....ww
w..w.w.wwwww...e.w
w..w.w.w.........w
w..w.w.w.........w
w..w.w.w.........w
w..w.w.wwwwwwwwwww
w..w.w.........e.w
w..w.wwwwwwwww...w
w..........w.....w
w..........w.....w
w....e.....w.....w
wwwwwwwwwwwwwwwwww`;

// Initialize the map and set solids
setMap(level);
setSolids([player, wall, door]);

// Player movement
onInput("w", () => {
  getFirst(player).y -= 1;
});

onInput("a", () => {
  getFirst(player).x -= 1;
});

onInput("s", () => {
  getFirst(player).y += 1;
});

onInput("d", () => {
  getFirst(player).x += 1;
});

// Enemy movement
function moveEnemies() {
  getAll(enemy).forEach(e => {
    const direction = Math.floor(Math.random() * 4);
    switch (direction) {
      case 0: e.y -= 1; break;
      case 1: e.x += 1; break;
      case 2: e.y += 1; break;
      case 3: e.x -= 1; break;
    }
  });
}
setInterval(moveEnemies, 1000);

// Check for interactions
afterInput(() => {
  const playerSprite = getFirst(player);

  // Check for key collection
  const keys = getTile(playerSprite.x, playerSprite.y).filter(sprite => sprite.type === key);
  if (keys.length > 0) {
    keys.forEach(k => k.remove());
    setSolids([player, wall]);
  }

  // Check for door unlocking
  const doors = getTile(playerSprite.x, playerSprite.y).filter(sprite => sprite.type === door);
  if (doors.length > 0 && getAll(key).length === 0) {
    doors.forEach(d => d.remove());
  }

  // Check for exit
  const exits = getTile(playerSprite.x, playerSprite.y).filter(sprite => sprite.type === exit);
  if (exits.length > 0) {
    addText("You Win!", { x: 5, y: 5, color: color`3` });
  }

  // Check for enemies
  const enemies = getTile(playerSprite.x, playerSprite.y).filter(sprite => sprite.type === enemy);
  if (enemies.length > 0) {
    addText("Game Over!", { x: 5, y: 5, color: color`3` });
  }
});

// Place the player at the start
addSprite(1, 1, player);
